/*
 * This file is generated by jOOQ.
 */
package dunder.mifflin.persistence.jdbc.jooq;


import dunder.mifflin.persistence.jdbc.jooq.tables.*;
import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import javax.annotation.processing.Generated;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = -109911919;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.avatar</code>.
     */
    public final Avatar AVATAR = dunder.mifflin.persistence.jdbc.jooq.tables.Avatar.AVATAR;

    /**
     * The table <code>public.city</code>.
     */
    public final City CITY = dunder.mifflin.persistence.jdbc.jooq.tables.City.CITY;

    /**
     * The table <code>public.examination</code>.
     */
    public final Examination EXAMINATION = dunder.mifflin.persistence.jdbc.jooq.tables.Examination.EXAMINATION;

    /**
     * The table <code>public.follows</code>.
     */
    public final Follows FOLLOWS = dunder.mifflin.persistence.jdbc.jooq.tables.Follows.FOLLOWS;

    /**
     * The table <code>public.general</code>.
     */
    public final General GENERAL = dunder.mifflin.persistence.jdbc.jooq.tables.General.GENERAL;

    /**
     * The table <code>public.hs_admin</code>.
     */
    public final HsAdmin HS_ADMIN = dunder.mifflin.persistence.jdbc.jooq.tables.HsAdmin.HS_ADMIN;

    /**
     * The table <code>public.hs_doctor</code>.
     */
    public final HsDoctor HS_DOCTOR = dunder.mifflin.persistence.jdbc.jooq.tables.HsDoctor.HS_DOCTOR;

    /**
     * The table <code>public.hs_exam</code>.
     */
    public final HsExam HS_EXAM = dunder.mifflin.persistence.jdbc.jooq.tables.HsExam.HS_EXAM;

    /**
     * The table <code>public.hs_prescription</code>.
     */
    public final HsPrescription HS_PRESCRIPTION = dunder.mifflin.persistence.jdbc.jooq.tables.HsPrescription.HS_PRESCRIPTION;

    /**
     * The table <code>public.hs_qualification</code>.
     */
    public final HsQualification HS_QUALIFICATION = dunder.mifflin.persistence.jdbc.jooq.tables.HsQualification.HS_QUALIFICATION;

    /**
     * The table <code>public.hs_report</code>.
     */
    public final HsReport HS_REPORT = dunder.mifflin.persistence.jdbc.jooq.tables.HsReport.HS_REPORT;

    /**
     * The table <code>public.hs_ticket</code>.
     */
    public final HsTicket HS_TICKET = dunder.mifflin.persistence.jdbc.jooq.tables.HsTicket.HS_TICKET;

    /**
     * The table <code>public.medicine</code>.
     */
    public final Medicine MEDICINE = dunder.mifflin.persistence.jdbc.jooq.tables.Medicine.MEDICINE;

    /**
     * The table <code>public.medicine_prescription</code>.
     */
    public final MedicinePrescription MEDICINE_PRESCRIPTION = dunder.mifflin.persistence.jdbc.jooq.tables.MedicinePrescription.MEDICINE_PRESCRIPTION;

    /**
     * The table <code>public.medicine_ticket</code>.
     */
    public final MedicineTicket MEDICINE_TICKET = dunder.mifflin.persistence.jdbc.jooq.tables.MedicineTicket.MEDICINE_TICKET;

    /**
     * The table <code>public.person</code>.
     */
    public final Person PERSON = dunder.mifflin.persistence.jdbc.jooq.tables.Person.PERSON;

    /**
     * The table <code>public.prescription</code>.
     */
    public final Prescription PRESCRIPTION = dunder.mifflin.persistence.jdbc.jooq.tables.Prescription.PRESCRIPTION;

    /**
     * The table <code>public.province</code>.
     */
    public final Province PROVINCE = dunder.mifflin.persistence.jdbc.jooq.tables.Province.PROVINCE;

    /**
     * The table <code>public.region</code>.
     */
    public final Region REGION = dunder.mifflin.persistence.jdbc.jooq.tables.Region.REGION;

    /**
     * The table <code>public.sp_exam</code>.
     */
    public final SpExam SP_EXAM = dunder.mifflin.persistence.jdbc.jooq.tables.SpExam.SP_EXAM;

    /**
     * The table <code>public.sp_prescription</code>.
     */
    public final SpPrescription SP_PRESCRIPTION = dunder.mifflin.persistence.jdbc.jooq.tables.SpPrescription.SP_PRESCRIPTION;

    /**
     * The table <code>public.sp_qualification</code>.
     */
    public final SpQualification SP_QUALIFICATION = dunder.mifflin.persistence.jdbc.jooq.tables.SpQualification.SP_QUALIFICATION;

    /**
     * The table <code>public.sp_report</code>.
     */
    public final SpReport SP_REPORT = dunder.mifflin.persistence.jdbc.jooq.tables.SpReport.SP_REPORT;

    /**
     * The table <code>public.sp_ticket</code>.
     */
    public final SpTicket SP_TICKET = dunder.mifflin.persistence.jdbc.jooq.tables.SpTicket.SP_TICKET;

    /**
     * The table <code>public.specialist</code>.
     */
    public final Specialist SPECIALIST = dunder.mifflin.persistence.jdbc.jooq.tables.Specialist.SPECIALIST;

    /**
     * The table <code>public.token</code>.
     */
    public final Token TOKEN = dunder.mifflin.persistence.jdbc.jooq.tables.Token.TOKEN;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.CITY_ID_SEQ,
            Sequences.EXAMINATION_ID_SEQ,
            Sequences.FOLLOWS_ID_SEQ,
            Sequences.MEDICINE_ID_SEQ,
            Sequences.PERSON_ID_SEQ,
            Sequences.PRESCRIPTION_ID_SEQ,
            Sequences.PROVINCE_ID_SEQ,
            Sequences.REGION_ID_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Avatar.AVATAR,
            City.CITY,
            Examination.EXAMINATION,
            Follows.FOLLOWS,
            General.GENERAL,
            HsAdmin.HS_ADMIN,
            HsDoctor.HS_DOCTOR,
            HsExam.HS_EXAM,
            HsPrescription.HS_PRESCRIPTION,
            HsQualification.HS_QUALIFICATION,
            HsReport.HS_REPORT,
            HsTicket.HS_TICKET,
            Medicine.MEDICINE,
            MedicinePrescription.MEDICINE_PRESCRIPTION,
            MedicineTicket.MEDICINE_TICKET,
            Person.PERSON,
            Prescription.PRESCRIPTION,
            Province.PROVINCE,
            Region.REGION,
            SpExam.SP_EXAM,
            SpPrescription.SP_PRESCRIPTION,
            SpQualification.SP_QUALIFICATION,
            SpReport.SP_REPORT,
            SpTicket.SP_TICKET,
            Specialist.SPECIALIST,
            Token.TOKEN);
    }
}
